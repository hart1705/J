@model PORTAL.WEB.Models.ApplicationUserViewModels.ApplicationUserList

@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}

@section ContentHeader{
    <h4>Application Users</h4>
}
<rbcontainer action-name="New" controller-name="ApplicationUser" is-owner="true">
    @section ControlHeader{
        <a asp-action="New" class="btn btn-sm btn-flat btn-default btn-controlheader">ADD NEW</a>
    }
</rbcontainer>
<div class="box box-widget">
    <div class="box-body">
        @*<div id="record-list-container" class="hidden">
                @{ Html.RenderPartial("_RecordList", Model);}
            </div>*@
        <table id="SearchResultTable" class="table responsive no-wrap table-hover table-striped" width="100%">
            <thead>
                <tr>
                    <th>
                        User Name
                    </th>
                    <th>
                        First Name
                    </th>
                    <th>
                        Last Name
                    </th>
                    <th>
                        Email Address
                    </th>
                    <th>
                        Mobile Number
                    </th>
                    <th>
                        Created By
                    </th>
                    <th>
                        Created On
                    </th>
                    <th>
                        Modified On
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>
@section scripts{
    <script>
        var table = undefined;
        $(function () {
            table = $('#SearchResultTable').DataTable({
                "proccessing": true,
                "serverSide": true,
                "ajax": {
                    url: "@Url.Action("CustomServerSideSearchAction", "ApplicationUser")",
                    type: 'POST'
                },
                "language": {
                    "search": "",
                    "searchPlaceholder": "Search..."
                },
                "columns": [
                    {
                        "mData": "userName",
                        "mRender": function (data, type, row) {
                            if (row.hasViewPermission) {
                                return "<a href='@Url.Action("Form", "ApplicationUser")/" + row.id + "'>"+data+"</a>";
                            }
                            return data;
                        }
                    },
                    { "data": "firstName" },
                    { "data": "lastName" },
                    { "data": "email" },
                    { "data": "phoneNumber" },
                    { "data": "createdByName" },
                    {
                        "mData": "createdOn",
                        "mRender": function (data, type, row) {
                            var gmtDateTime = moment.utc(data, "YYYY-MM-DD HH");
                            return gmtDateTime.local().format('DD/MM/YYYY hh:mm A');
                        }
                    },
                    {
                        "mData": "modifiedOn",
                        "mRender": function (data, type, row) {
                            var gmtDateTime = moment.utc(data, "YYYY-MM-DD HH");
                            return gmtDateTime.local().format('DD/MM/YYYY hh:mm A');
                        }
                    },
                    {
                        "mData": "status",
                        "mRender": function (data, type, row) {
                            return data == 0 ? "Active" : "Inactive";
                        }
                    },
                    {
                        "mData": "id",
                        "mRender": function (data, type, row) {
                            var actions = "";
                            if (row.hasUpdatePermission) {
                                actions += "<a href='@Url.Action("Form", "ApplicationUser")/" + data + "'>Edit</a>";
                            }
                            if (row.hasDeletePermission) {
                                actions += " | <a href='@Url.Action("Delete", "ApplicationUser")/" + data + "' data-target='#record-delete-modal' data-ajax='true' data-ajax-method='GET' data-ajax-mode='replace' data-ajax-success='Helper.BootstrapModal_OnSuccess(this)' data-ajax-update='#record-delete-modal-content' data-ajax-loading='#application_loading' data-ajax-loading-duration='5'> Delete </a>";
                            }
                            return actions;
                        }
                    }
                ],
                "columnDefs": [
                    { "orderable": false, "targets": [5, 9] }
                ],
                "initComplete": function(settings, json) {
                    $('#SearchResultTable_filter input').unbind();
                    $('#SearchResultTable_filter input').bind('keyup', function(e) {
                        if(e.keyCode == 13) {
                            table.search( this.value ).draw();
                        }
                    });
                }
            });
        });
    </script>
}
